//+------------------------------------------------------------------+
//|                                                          com.mq4 |
//|                        Copyright 2024, MetaQuotes Software Corp. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Traders Training"
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
#property indicator_chart_window
//+----------------------------------------+
//|  Input datas                           |
//+----------------------------------------+
input color ResistanceColor = Red;
input color SupportColor = Green;
input int LineWidth = 1;
input ENUM_LINE_STYLE LineStyle = STYLE_SOLID;
extern color CamFontColor = clrYellow;
extern int CamFontSize = 10;
extern bool CamTargets = true;
extern bool ListCamTargets = true;
extern bool StandardPivots = true;
extern bool ListStandardPivots = true;
extern double  GMTshiftSun=0;  
extern double  GMTshift=1;
extern bool Pivot = true;
extern bool MidPivots = false;
extern color PivotColor = LimeGreen;
extern color PivotFontColor = White;
extern int PivotFontSize = 8;
extern int PipDistance = 20;

//+-----------------------------------------+
//|  Global variables to hold pivot points  |             
//+-----------------------------------------+
double H1, H2, H3, H4,H5;
double L1, L2, L3, L4,L5;
double P;

double yesterday_high=0;
double yesterday_low=0;
double yesterday_close=0;

double D1=0.091667;
double D2=0.183333;
double D3=0.2750;
double D4=0.55;

bool firstL3=true;
bool firstH3=true;

double closeprice = Close[0];



//+-----------------------------------------+
//|  Script program start function          |             
//+-----------------------------------------+
int start()
{
// start varibel ...
int    counted_bars=IndicatorCounted();
double Q=0,S=0,R=0,M2=0,M3=0,S1=0,R1=0,M1=0,M4=0,S2=0,R2=0,M0=0,M5=0,S3=0,R3=0,nQ=0,nD=0,D=0,R4=0,S4=0,R5=0,S5=0;
double shift_corrected;

double day_high=0;
double day_low=0;
double yesterday_open=0;
double today_open=0;

int cnt=720;
double cur_day=0;
double prev_day=0;
double rates_d1[2][6];


if(Period() > 1440)
{
Print("Error - Chart period is greater than 1 day.");
return(-1); // then exit
}

if (DayOfWeek()==1)  shift_corrected = GMTshiftSun ;
else if ((DayOfWeek()==2) && (Minute() >= 5)) shift_corrected=GMTshift;
else    shift_corrected=GMTshift;

while (cnt!= 0)
{
	cur_day = TimeDay(Time[cnt]- (shift_corrected*3600));
	
	if (prev_day != cur_day)
	{
		yesterday_close = Close[cnt+1];
		today_open = Open[cnt];
		yesterday_high = day_high;
		yesterday_low = day_low;

		day_high = High[cnt];
		day_low  = Low[cnt];

		prev_day = cur_day;
	}
   if(High[cnt]>day_high)
    {day_high = High[cnt];}
   if(Low[cnt]<day_low)
     {day_low = Low[cnt];}
	cnt--;
}

D = (day_high - day_low);
Q = (yesterday_high - yesterday_low);

P = (yesterday_high + yesterday_low + yesterday_close)/3;

H5 = (yesterday_high/yesterday_low)*yesterday_close;
H4 = ((yesterday_high - yesterday_low)* D4) + yesterday_close;
H3 = ((yesterday_high - yesterday_low)* D3) + yesterday_close;
H2 = ((yesterday_high - yesterday_low) * D2) + yesterday_close;
H1 = ((yesterday_high - yesterday_low) * D1) + yesterday_close;

L1 = yesterday_close - ((yesterday_high - yesterday_low)*(D1));
L2 = yesterday_close - ((yesterday_high - yesterday_low)*(D2));
L3 = yesterday_close - ((yesterday_high - yesterday_low)*(D3));
L4 = yesterday_close - ((yesterday_high - yesterday_low)*(D4));
L5 = yesterday_close - (H5 - yesterday_close);


//
if (StandardPivots)
{
R1 = (2*P)-yesterday_low;
S1 = (2*P)-yesterday_high;
R2 = P-S1+R1;
S2 = P-R1+S1;
R3 = (2*P)+(yesterday_high-(2*yesterday_low));
S3 = (2*P)-((2* yesterday_high)-yesterday_low);
R4 = (3*P)+(yesterday_high-(3*yesterday_low));
S4 = (3*P)-((3* yesterday_high)-yesterday_low);
R5 = (4*P)+(yesterday_high-(4*yesterday_low));
S5 = (4*P)-((4* yesterday_high)-yesterday_low);
}
//
if (MidPivots)
{
M0 = (S2+S3)/2;
M1 = (S1+S2)/2;
M2 = (P+S1)/2;
M3 = (P+R1)/2;
M4 = (R1+R2)/2;
M5 = (R2+R3)/2;
}
//
if (Q > 5) 
{	nQ = Q; }
else
{ nQ = Q*10000;}
if (D > 5)
{ nD = D; }
else
{ nD = D*10000; }
//
if (StringSubstr(Symbol(),3,3)=="JPY")
 {nQ=nQ/100;
  nD=nD/100;
  }

// comment alll data...
if ((CamTargets) && (ListCamTargets) && (StandardPivots) && (ListStandardPivots))     
{
Comment("High= ",yesterday_high,"    Previous Days Range= ",nQ,"\nLow= ",yesterday_low,"    Current Days Range= ",nD,"\nClose= ",yesterday_close,
         "\n\nH5 ",H5,"\nH4 ",H4,"\nH3 ",H3,"\n\nL3 ",L3,"\nL4 ",L4,"\nL5 ",L5,
         "\n\n\n\nR5 ",R5,"\nR4 ", R4,"\nR3 ", R3,"\nR2 ", R2,"\nR1 ", R1,"\nPivot ", P,"\nS1 ", S1,"\nS2 ", S2,"\nS3 ", S3,"\nS4 ", S4,"\nS5 ",S5);
}
else if ((CamTargets) && (ListCamTargets) && (StandardPivots) && !(ListStandardPivots))     
{
Comment("High= ",yesterday_high,"    Previous Days Range= ",nQ,"\nLow= ",yesterday_low,"    Current Days Range= ",nD,"\nClose= ",yesterday_close,
         "\n\nH5 ",H5,"\nH4 ",H4,"\nH3 ",H3,"\n\nL3 ",L3,"\nL4 ",L4,"\nL5 ",L5);
}
else if ((CamTargets) && (ListCamTargets) && !(StandardPivots))     
{
Comment("High= ",yesterday_high,"    Previous Days Range= ",nQ,"\nLow= ",yesterday_low,"    Current Days Range= ",nD,"\nClose= ",yesterday_close,
         "\n\nH5 ",H5,"\nH4 ",H4,"\nH3 ",H3,"\n\nL3 ",L3,"\nL4 ",L4,"\nL5 ",L5);
}
else if (!(CamTargets) && (StandardPivots) && (ListStandardPivots))     
{
Comment("High= ",yesterday_high,"    Previous Days Range= ",nQ,"\nLow= ",yesterday_low,"    Current Days Range= ",nD,"\nClose= ",yesterday_close,
         "\n\nR5 ",R5,"\nR4 ", R4,"\nR3 ", R3,"\nR2 ", R2,"\nR1 ", R1,"\nPivot ", P,"\nS1 ", S1,"\nS2 ", S2,"\nS3 ", S3,"\nS4 ", S4,"\nS5 ",S5);
}
else
{
Comment("High= ",yesterday_high,"    Previous Days Range= ",nQ,"\nLow= ",yesterday_low,"    Current Days Range= ",nD,"\nClose= ",yesterday_close);
}

 if (Pivot)
   {
      if(ObjectFind("P label") != 0)
      {
      ObjectCreate("P label", OBJ_TEXT, 0, Time[0], P);
      ObjectSetText("P label", "Pivot", PivotFontSize, "Arial", PivotFontColor);
      }
      else
      {
      ObjectMove("P label", 0, Time[0], P);
      }

//---  Draw  Pivot lines on chart

      if(ObjectFind("P line") != 0)
      {
      ObjectCreate("P line", OBJ_HLINE, 0, Time[40], P);
      ObjectSet("P line", OBJPROP_STYLE, STYLE_DASH);
      ObjectSet("P line", OBJPROP_COLOR, PivotColor);
      }
      else
      {
      ObjectMove("P line", 0, Time[40], P);
      }

  }
cam();// cam line and name call fuction....
DoAlert();// Alert function call ...
return(0);
}


//+-----------------------------------------+
//|  Script program calculate function      |             
//+-----------------------------------------+



//+-----------------------------------------+
//|  Script program cam function      |             
//+-----------------------------------------+
void cam()
{
if (CamTargets)
{
    if(ObjectFind("H5 label") != 0)//H5....
      {
      ObjectCreate("H5 label", OBJ_TEXT, 0, Time[20], H5);
      ObjectSetText("H5 label", " ", CamFontSize, "Arial", CamFontColor);
       }
      else
      {ObjectMove("H5 label", 0, Time[20], H5);}
      
      if(ObjectFind("H4 label") != 0)//H4...
      {
      ObjectCreate("H4 label", OBJ_TEXT, 0, Time[20], H4);
      ObjectSetText("H4 label", "Sell Stop", CamFontSize, "Arial", CamFontColor);
      }
      else
      {ObjectMove("H4 label", 0, Time[20], H4);}
      
      if(ObjectFind("H3 label") != 0)//H3..
      {
      ObjectCreate("H3 label", OBJ_TEXT, 0, Time[20], H3);
      ObjectSetText("H3 label", " Sell Entry", CamFontSize, "Arial", CamFontColor);
      }
      else
      {ObjectMove("H3 label", 0, Time[20], H3);}
      
      if(ObjectFind("H2 label") != 0)//H2..
      {
      ObjectCreate("H2 label", OBJ_TEXT, 0, Time[20], H2);
      ObjectSetText("H2 label", " ", CamFontSize, "Arial", CamFontColor);
      }
      else
      {ObjectMove("H2 label", 0, Time[20], H2);}//H2...end..
      
      if(ObjectFind("H1 label") != 0)//H1..
      {
      ObjectCreate("H1 label", OBJ_TEXT, 0, Time[20], H1);
      ObjectSetText("H1 label", " ", CamFontSize, "Arial", CamFontColor);
      }
      else
      {ObjectMove("H1 label", 0, Time[20], H1);}  
     // finise...H level ... 
     
     
// start...L Level...
       if(ObjectFind("L1 label") != 0)
      {
      ObjectCreate("L1 label", OBJ_TEXT, 0, Time[20], L1);
      ObjectSetText("L1 label", " ", CamFontSize, "Arial", CamFontColor);
      
      }
      else
      {ObjectMove("L1 label", 0, Time[20], L1);}

      if(ObjectFind("L2 label") != 0)
      {
      ObjectCreate("L2 label", OBJ_TEXT, 0, Time[20], L2);
      ObjectSetText("L2 label", " ", CamFontSize, "Arial", CamFontColor);
      }
      else
      {ObjectMove("L2 label", 0, Time[20], L2);}

      if(ObjectFind("L3 label") != 0)
      {
      ObjectCreate("L3 label", OBJ_TEXT, 0, Time[20], L3);
      ObjectSetText("L3 label", " Buy Entry", CamFontSize, "Arial", CamFontColor);
      }
      else
      {
      ObjectMove("L3 label", 0, Time[20], L3);
      }

      if(ObjectFind("L4 label") != 0)
      {
      ObjectCreate("L4 label", OBJ_TEXT, 0, Time[20], L4);
      ObjectSetText("L4 label", " Buy stop", CamFontSize, "Arial", CamFontColor);
      }
      else
      {
      ObjectMove("L4 label", 0, Time[20], L4);
      }
      
      if(ObjectFind("L5 label") != 0)
      {
      ObjectCreate("L5 label", OBJ_TEXT, 0, Time[20], L5);
      ObjectSetText("L5 label", " ", CamFontSize, "Arial", CamFontColor);
      }
      else
      {
      ObjectMove("L5 label", 0, Time[20], L5);
      }

//---- Draw Camarilla lines on Chart
//----Draw H level...line
      if(ObjectFind("H5 line") != 0)
      {
      ObjectCreate("H5 line", OBJ_HLINE, 0, Time[40], H5);
      ObjectSet("H5 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("H5 line", OBJPROP_COLOR, SpringGreen);
      ObjectSet("H5 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("H5 line", 0, Time[40], H5);}
      
      if(ObjectFind("H4 line") != 0)
      {
      ObjectCreate("H4 line", OBJ_HLINE, 0, Time[40], H4);
      ObjectSet("H4 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("H4 line", OBJPROP_COLOR, SpringGreen);
      ObjectSet("H4 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("H4 line", 0, Time[40], H4);}

      if(ObjectFind("H3 line") != 0)
      {
      ObjectCreate("H3 line", OBJ_HLINE, 0, Time[40], H3);
      ObjectSet("H3 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("H3 line", OBJPROP_COLOR, SpringGreen);
      ObjectSet("H3 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("H3 line", 0, Time[40], H3);}
      
      if(ObjectFind("H2 line") != 0)
      {
      ObjectCreate("H2 line", OBJ_HLINE, 0, Time[40], H2);
      ObjectSet("H2 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("H2 line", OBJPROP_COLOR, SpringGreen);
      ObjectSet("H2 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("H2 line", 0, Time[40], H2);}

      if(ObjectFind("H1 line") != 0)
      {
      ObjectCreate("H1 line", OBJ_HLINE, 0, Time[40], H1);
      ObjectSet("H1 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("H1 line", OBJPROP_COLOR, SpringGreen);
      ObjectSet("H1 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("H1 line", 0, Time[40], H1);}      
      

 //---Draw L.. level line...
      if(ObjectFind("L1 line") != 0)
      {
      ObjectCreate("L1 line", OBJ_HLINE, 0, Time[40], L1);
      ObjectSet("L1 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("L1 line", OBJPROP_COLOR, Red);
      ObjectSet("L1 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("L1 line", 0, Time[40], L1);}
 
      if(ObjectFind("L2 line") != 0)
      {
      ObjectCreate("L2 line", OBJ_HLINE, 0, Time[40], L2);
      ObjectSet("L2 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("L2 line", OBJPROP_COLOR, Red);
      ObjectSet("L2 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("L2 line", 0, Time[40], L2);}
 
      if(ObjectFind("L3 line") != 0)
      {
      ObjectCreate("L3 line", OBJ_HLINE, 0, Time[40], L3);
      ObjectSet("L3 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("L3 line", OBJPROP_COLOR, Red);
      ObjectSet("L3 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("L3 line", 0, Time[40], L3);}

      if(ObjectFind("L4 line") != 0)
      {
      ObjectCreate("L4 line", OBJ_HLINE, 0, Time[40], L4);
      ObjectSet("L4 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("L4 line", OBJPROP_COLOR, Red);
      ObjectSet("L4 line", OBJPROP_WIDTH, 1);
      }
      else
      {ObjectMove("L4 line", 0, Time[40], L4);}
      
      if(ObjectFind("L5 line") != 0)
      {
      ObjectCreate("L5 line", OBJ_HLINE, 0, Time[40], L5);
      ObjectSet("L5 line", OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet("L5 line", OBJPROP_COLOR, Red);
      ObjectSet("L5 line", OBJPROP_WIDTH, 1);
      }
      else
      {
      ObjectMove("L5 line", 0, Time[40], L5);
      }
}
}


//+-----------------------------------------+
//|  Script program Alert function          |             
//+-----------------------------------------+
void DoAlert()
{

  double DifAboveL3,PipsLimit;
   double DifBelowH3;
   
   DifBelowH3 = H3 - Close[0];
   DifAboveL3 = Close[0] - L3;
   PipsLimit = PipDistance*Point;
   
   if (DifBelowH3 > PipsLimit) firstH3 = true;
   if (DifBelowH3 <= PipsLimit && DifBelowH3 > 0)
   {
    if (firstH3)
    {
      Alert("Below Cam H3 Line by ",DifBelowH3, " for ", Symbol(),"-",Period());
      PlaySound("alert.wav");
      firstH3=false;
    }
   }

   if (DifAboveL3 > PipsLimit) firstL3 = true;
   if (DifAboveL3 <= PipsLimit && DifAboveL3 > 0)
   {
    if (firstL3)
    {
      Alert("Above Cam L3 Line by ",DifAboveL3," for ", Symbol(),"-",Period());
      Sleep(2000);
      PlaySound("timeout.wav");
      firstL3=false;
    }
   }
}

//+-----------------------------------------+
//|  Script program Deinit function          |             
//+-----------------------------------------+
int OnDeinit()
{
  if(Pivot=True)
   {
     ObjectDelete("P Label");
     ObjectDelete("P Line"); 
   }
  if(CamTargets=True)
   {
     ObjectDelete("H1");
     ObjectDelete("H2");
     ObjectDelete("H3");
     ObjectDelete("H4");
     ObjectDelete("L1");
     ObjectDelete("L2");
     ObjectDelete("L3");
     ObjectDelete("L4");    
   }
   return(0);
}
